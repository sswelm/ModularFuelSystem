//Interstellar-RealFuels configs
@WARP_PLUGIN_SETTINGS[*]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@HydrogenResourceName = LqdHydrogen //LiquidFuel
	@HydrogenPeroxideResourceName = HTP //H2Peroxide
	@AmmoniaResourceName = LqdAmmonia //Ammonia
	@OxygenResourceName = LqdOxygen //Oxidizer
}

//Add water tank using KSPI water. (TO-DO: integration with TACLS water without trampling KSPI or TACLS)
@TANK_DEFINITION[*]:HAS[@TANK[Kerosene],!TANK[LqdWater]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	+TANK[Kerosene]
	{
		@name = LqdWater
	}
}

//Add Argon to all tanks that have XenonGas, as they function & store similarly.
@TANK_DEFINITION[*]:HAS[@TANK[XenonGas],!TANK[Argon]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	+TANK[XenonGas]
	{
		@name = Argon
	}
}

//Part catch-all updates
@PART[*]:HAS[@RESOURCE[Ammonia]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@RESOURCE[Ammonia]
	{
		@name = LqdAmmonia
	}
}
@PART[*]:HAS[@RESOURCE[H2Peroxide]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@RESOURCE[H2Peroxide]
	{
		@name = HTP
	}
}

//Resource Definition updates
@OCEANIC_RESOURCE_DEFINITION[*]:HAS[#resourceName[Ammonia]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@resourceName = LqdAmmonia
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:HAS[#resourceName[Ammonia]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@resourceName = LqdAmmonia
}
@OCEANIC_RESOURCE_DEFINITION[*]:HAS[#resourceName[H2Peroxide]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@resourceName = HTP
}
@ATMOSPHERIC_RESOURCE_DEFINITION[*]:HAS[#resourceName[H2Peroxide]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@resourceName = HTP
}

//NTR Propellant updates
@BASIC_NTR_PROPELLANT[Ammonia]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@guiName = Ammonia
	@PROPELLANT[Ammonia]
	{
		@name = LqdAmmonia
	}
}
@BASIC_NTR_PROPELLANT[Hydrolox]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@guiName = Hydrolox
	@PROPELLANT[LiquidFuel]
	{
		@name = LqdHydrogen
        @ratio = 0.73
	}
	@PROPELLANT[Oxidizer]
	{
		@name = LqdOxygen
		@ratio = 0.27
		@DrawGauge = False
	}
}
@BASIC_NTR_PROPELLANT[Methalox]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@PROPELLANT[Oxidizier]
	{
		@name = LqdOxygen
		@ratio = 0.557
	}
	@PROPELLANT[LqdMethane]
	{
		@ratio = 0.443
	}
}
@BASIC_NTR_PROPELLANT[Hydrogen]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@guiName = LqdHydrogen
	@PROPELLANT[LiquidFuel]
	{
		@name = LqdHydrogen
	}
}

//Electric Propellants update
@ELECTRIC_PROPELLANT[Ammonia]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@PROPELLANT[Ammonia]
	{
		@name = LqdAmmonia
	}
}
@ELECTRIC_PROPELLANT[Hydrogen]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@guiName = LqdHydrogen
	@PROPELLANT[LiquidFuel]
	{
		@name = LqdHydrogen
	}
}
@ELECTRIC_PROPELLANT[MonoPropellant]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@guiName = Hydrazine
	@PROPELLANT[MonoPropellant]
	{
		@name = Hydrazine
	}
}

//Remove duplicate entry for LqdMethane
!RESOURCE_DEFINITION[LqdMethane]:HAS[#density[0.00186456]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@density = 0.00042262
}

//Specific part fixes
@PART[FNMethaneTank*]:HAS[@RESOURCE[LqdMethane],@RESOURCE[Oxidizer],!MODULE[ModuleFuelTanks]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	MODULE
	{
		name = ModuleFuelTanks
		temp = 0
		volume = 0
		type = Cryogenic
		@temp = #$../RESOURCE[LqdMethane]/maxAmount$
		@temp *= 4.412
		@volume = #$../MODULE[ModuleFuelTanks]/temp$
		@temp = #$../RESOURCE[Oxidizer]/maxAmount$
		@temp *= 5
		@volume += #$../MODULE[ModuleFuelTanks]/temp$
		!temp = 0
	}
	!RESOURCE[LqdMethane] {}
	!RESOURCE[Oxidizer] {}
}

@PART[*]:HAS[@MODULE[FNModuleResourceExtraction]]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@MODULE[FNModuleResourceExtraction]:HAS[#resourceName[Ammonia]]
	{
		@resourceName = LqdAmmonia
	}
}

//NOTE: the ratio might be kinda screwy; this should really go in an engines config.
@PART[AluminiumHybrid1]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@MODULE[ModuleEngines]
	{
		@PROPELLANT[Oxidizer]
		{
			@name = LqdOxygen
			@ratio *= 5
		}
	}
	@RESOURCE[Oxidizer]
	{
		@name = LqdOxygen
		@amount *= 5
		@maxAmount *= 5
	}
}
@PART[vista]:NEEDS[WarpPlugin]:FOR[RealFuels]
{
	@MODULE[ModuleEngines]
	{
		@PROPELLANT[LiquidFuel]
		{
			@name = LqdHydrogen
			@ratio *= 14.114
		}
	}
}
